<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Illuminate\Database\Eloquent\Collection;


abstract class BaseModel extends Model
{
    

    
    /**
     * Is the filter request valid?
     * 
     * @param unknown $query
     * @return boolean
     */
    private function useFilter($query)
    {
        
        $return = false;
        
        if (isset($query['filter']) && isset($query['field']) && isset($query['value'])) {
            
            if (!empty($query['field']) && !empty($query['value'])) {
                
                
                $return = true;
                
                
            }
            
            
        }
        
        return $return;
        
    }
    
    /**
     * Return the fileterable fields from the model
     * 
     * @return array
     */
    public function filterFields()
    {
        if (isset($this->filter_fields)) {
            
            return $this->filter_fields;
            
        } else {
            
            return ['id' => 'ID'];
            
        }
        
    }

    /**
     * Return the fileterable fields from the model
     *
     * @return array
     */
    public function filterFieldsArray()
    {
        if (isset($this->filter_fields_array)) {

            return $this->filter_fields_array;

        } else {

            return NULL;

        }

    }

    /**
     * Return the fileterable fields from the model
     *
     * @return array
     */
    public function filterFieldsArrayJoins()
    {
        if (isset($this->filter_fields_array_joins)) {

            return $this->filter_fields_array_joins;

        } else {

            return NULL;

        }

    }


    public function getCreatedAtAttribute()
    {
       if ($this->attributes['created_at']) {
            return Carbon::parse($this->attributes['created_at'])->format('d/m/Y H:i');
        }
    }
    public function getUpdatedAtAttribute($value)
    {
        if ($this->attributes['updated_at']) {
            return Carbon::parse($this->attributes['updated_at'])->format('d/m/Y H:i');
        }
    }


    
}